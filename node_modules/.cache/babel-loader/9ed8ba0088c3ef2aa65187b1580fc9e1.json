{"ast":null,"code":"import Axios from 'axios';\nimport { API_URL } from '../../constants/API';\nexport const registerUser = ({\n  fullName,\n  username,\n  email,\n  password\n}) => {\n  return dispatch => {\n    Axios.post(`${API_URL}/users`, {\n      fullName,\n      username,\n      email,\n      password,\n      role: \"user\"\n    }).then(result => {\n      delete result.data.password;\n      dispatch({\n        type: \"USER_LOGIN\",\n        payload: result.data\n      });\n      alert(\"Berhasil mendaftarkan user!\");\n    }).catch(() => {\n      alert(\"Gagal mendaftarkan user!\");\n    });\n  };\n};\nexport const loginUser = ({\n  username,\n  password\n}) => {\n  return dispatch => {\n    Axios.get(`${API_URL}/users`, {\n      params: {\n        username\n      }\n    }).then(result => {\n      if (result.data.length) {\n        if (password === result.data[0].password) {\n          delete result.data[0].password;\n          localStorage.setItem(\"userDataEmmerce\", JSON.stringify(result.data[0]));\n          dispatch({\n            type: \"USER_LOGIN\",\n            payload: result.data[0]\n          });\n        } else {\n          // Handle error wrong password\n          dispatch({\n            type: \"USER_ERROR\",\n            payload: \"Wrong password!\"\n          });\n        }\n      } else {\n        // Handle error username not found\n        dispatch({\n          type: \"USER_ERROR\",\n          payload: \"User not found\"\n        });\n      }\n    }).catch(err => {\n      alert(\"Terjadi kesalahn di server\");\n    });\n  };\n};\nexport const logoutUser = () => {\n  localStorage.removeItem(\"userDataEmmerce\");\n  return {\n    type: \"USER_LOGOUT\"\n  };\n};\nexport const userKeepLogin = userData => {\n  return dispatch => {\n    Axios.get(`${API_URL}/users`, {\n      params: {\n        id: userData.id\n      }\n    }).then(result => {\n      delete result.data[0].password;\n      localStorage.setItem(\"userDataEmmerce\", JSON.stringify(result.data[0]));\n      dispatch({\n        type: \"USER_LOGIN\",\n        payload: result.data[0]\n      });\n    }).catch(() => {\n      alert(\"Terjadi kesalahan di server\");\n    });\n  };\n};\nexport const checkStorage = () => {\n  return {\n    type: \"CHECK_STORAGE\"\n  };\n};","map":{"version":3,"sources":["/home/abdulmuiz/js/react/jc-online-emmerce/src/redux/actions/user.js"],"names":["Axios","API_URL","registerUser","fullName","username","email","password","dispatch","post","role","then","result","data","type","payload","alert","catch","loginUser","get","params","length","localStorage","setItem","JSON","stringify","err","logoutUser","removeItem","userKeepLogin","userData","id","checkStorage"],"mappings":"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","sourcesContent":["import Axios from 'axios';\nimport { API_URL } from '../../constants/API'\n\nexport const registerUser = ({ fullName, username, email, password }) => {\n  return (dispatch) => {\n      Axios.post(`${API_URL}/users`, {\n        fullName,\n        username,\n        email,\n        password,\n        role: \"user\",\n      })\n      .then((result) => {\n        delete result.data.password\n\n        dispatch({\n          type: \"USER_LOGIN\",\n          payload: result.data\n        })\n        alert(\"Berhasil mendaftarkan user!\")\n      })\n      .catch(() => {\n        alert(\"Gagal mendaftarkan user!\")\n      })\n  }\n}\n\nexport const loginUser = ({ username, password }) => {\n  return (dispatch) => {\n    Axios.get(`${API_URL}/users`, {\n      params: {\n        username,\n      }\n    })\n    .then((result) => {\n      if (result.data.length) {\n        if (password === result.data[0].password) {\n          delete result.data[0].password\n\n          localStorage.setItem(\"userDataEmmerce\", JSON.stringify(result.data[0]))\n\n          dispatch({\n            type: \"USER_LOGIN\",\n            payload: result.data[0]\n          })\n        } else {\n          // Handle error wrong password\n          dispatch({\n            type: \"USER_ERROR\",\n            payload: \"Wrong password!\"\n          })\n        }\n      } else {\n        // Handle error username not found\n        dispatch({\n          type: \"USER_ERROR\",\n          payload: \"User not found\",\n        })\n      }\n    })\n    .catch((err) => {\n      alert(\"Terjadi kesalahn di server\")\n    })\n  }\n}\n\nexport const logoutUser = () => {\n  localStorage.removeItem(\"userDataEmmerce\");\n\n  return {\n    type: \"USER_LOGOUT\"\n  }\n}\n\nexport const userKeepLogin = (userData) => {\n  return (dispatch) => {\n    Axios.get(`${API_URL}/users`, {\n      params: {\n        id: userData.id\n      }\n    })\n    .then((result) => {\n      delete result.data[0].password\n\n      localStorage.setItem(\"userDataEmmerce\", JSON.stringify(result.data[0]))\n\n      dispatch({\n        type: \"USER_LOGIN\",\n        payload: result.data[0]\n      })\n    })\n    .catch(() => {\n      alert(\"Terjadi kesalahan di server\")\n    })\n  }\n}\n\nexport const checkStorage = () => {\n  return {\n    type: \"CHECK_STORAGE\",\n  }\n}"]},"metadata":{},"sourceType":"module"}