{"ast":null,"code":"var _jsxFileName = \"/home/abdulmuiz/js/react/jc-online-emmerce/src/App.jsx\";\nimport React from 'react';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport Home from './pages/Home';\nimport Login from './pages/Auth/Login';\nimport Register from './pages/Auth/Register';\nimport Admin from './pages/Admin';\nimport Cart from './pages/Cart';\nimport History from './pages/History';\nimport ProductDetail from './pages/ProductDetail';\nimport MyNavbar from './components/MyNavbar';\nimport { connect } from 'react-redux';\nimport { userKeepLogin, checkStorage } from './redux/actions/user';\nimport { getCartData } from './redux/actions/cart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  componentDidMount() {\n    const userLocalStorage = localStorage.getItem(\"userDataEmmerce\");\n\n    if (userLocalStorage) {\n      const userData = JSON.parse(userLocalStorage);\n      this.props.userKeepLogin(userData);\n      this.props.getCartData(userData.id);\n    } else {\n      this.props.checkStorage();\n    }\n  }\n\n  render() {\n    if (this.props.userGlobal.storageIsChecked) {\n      return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n        children: [/*#__PURE__*/_jsxDEV(MyNavbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            component: Login,\n            path: \"/login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            component: Register,\n            path: \"/register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            component: Admin,\n            path: \"/admin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            component: Cart,\n            path: \"/cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            component: History,\n            path: \"/history\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            component: ProductDetail,\n            path: \"/product-detail/:productId\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            component: Home,\n            path: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    userGlobal: state.user\n  };\n};\n\nconst mapDispatchToProps = {\n  userKeepLogin,\n  checkStorage,\n  getCartData\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/home/abdulmuiz/js/react/jc-online-emmerce/src/App.jsx"],"names":["React","BrowserRouter","Route","Switch","Home","Login","Register","Admin","Cart","History","ProductDetail","MyNavbar","connect","userKeepLogin","checkStorage","getCartData","App","Component","componentDidMount","userLocalStorage","localStorage","getItem","userData","JSON","parse","props","id","render","userGlobal","storageIsChecked","mapStateToProps","state","user","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,KAAxB,EAA+BC,MAA/B,QAA6C,kBAA7C;AACA,OAAO,kCAAP;AAEA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,OAAOC,QAAP,MAAqB,uBAArB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,sBAA5C;AACA,SAASC,WAAT,QAA4B,sBAA5B;;;AAEA,MAAMC,GAAN,SAAkBhB,KAAK,CAACiB,SAAxB,CAAkC;AAEhCC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,gBAAgB,GAAGC,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAzB;;AAEA,QAAIF,gBAAJ,EAAsB;AACpB,YAAMG,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWL,gBAAX,CAAjB;AACA,WAAKM,KAAL,CAAWZ,aAAX,CAAyBS,QAAzB;AACA,WAAKG,KAAL,CAAWV,WAAX,CAAuBO,QAAQ,CAACI,EAAhC;AACD,KAJD,MAIO;AACL,WAAKD,KAAL,CAAWX,YAAX;AACD;AACF;;AAEDa,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKF,KAAL,CAAWG,UAAX,CAAsBC,gBAA1B,EAA4C;AAC1C,0BACE,QAAC,aAAD;AAAA,gCACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AAAA,kCACE,QAAC,KAAD;AAAO,YAAA,SAAS,EAAExB,KAAlB;AAAyB,YAAA,IAAI,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,KAAD;AAAO,YAAA,SAAS,EAAEC,QAAlB;AAA4B,YAAA,IAAI,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,KAAD;AAAO,YAAA,SAAS,EAAEC,KAAlB;AAAyB,YAAA,IAAI,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE,QAAC,KAAD;AAAO,YAAA,SAAS,EAAEC,IAAlB;AAAwB,YAAA,IAAI,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE,QAAC,KAAD;AAAO,YAAA,SAAS,EAAEC,OAAlB;AAA2B,YAAA,IAAI,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA,kBALF,eAME,QAAC,KAAD;AAAO,YAAA,SAAS,EAAEC,aAAlB;AAAiC,YAAA,IAAI,EAAC;AAAtC;AAAA;AAAA;AAAA;AAAA,kBANF,eAOE,QAAC,KAAD;AAAO,YAAA,SAAS,EAAEN,IAAlB;AAAwB,YAAA,IAAI,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAcD;;AAED,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AArC+B;;AAwClC,MAAM0B,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLH,IAAAA,UAAU,EAAEG,KAAK,CAACC;AADb,GAAP;AAGD,CAJD;;AAMA,MAAMC,kBAAkB,GAAG;AACzBpB,EAAAA,aADyB;AAEzBC,EAAAA,YAFyB;AAGzBC,EAAAA;AAHyB,CAA3B;AAMA,eAAeH,OAAO,CAACkB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CjB,GAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\"\n\nimport Home from './pages/Home';\nimport Login from './pages/Auth/Login';\nimport Register from './pages/Auth/Register';\nimport Admin from './pages/Admin';\nimport Cart from './pages/Cart';\nimport History from './pages/History';\nimport ProductDetail from './pages/ProductDetail';\nimport MyNavbar from './components/MyNavbar';\n\nimport { connect } from 'react-redux';\nimport { userKeepLogin, checkStorage } from './redux/actions/user';\nimport { getCartData } from './redux/actions/cart'\n\nclass App extends React.Component {\n\n  componentDidMount() {\n    const userLocalStorage = localStorage.getItem(\"userDataEmmerce\")\n\n    if (userLocalStorage) {\n      const userData = JSON.parse(userLocalStorage);\n      this.props.userKeepLogin(userData);\n      this.props.getCartData(userData.id);\n    } else {\n      this.props.checkStorage();\n    }\n  }\n\n  render() {\n    if (this.props.userGlobal.storageIsChecked) {\n      return (\n        <BrowserRouter>\n          <MyNavbar />\n          <Switch>\n            <Route component={Login} path=\"/login\" />\n            <Route component={Register} path=\"/register\" />\n            <Route component={Admin} path=\"/admin\" />\n            <Route component={Cart} path=\"/cart\" />\n            <Route component={History} path=\"/history\" />\n            <Route component={ProductDetail} path=\"/product-detail/:productId\" />\n            <Route component={Home} path=\"/\" />\n          </Switch>\n        </BrowserRouter>\n      )\n    }\n\n    return (\n      <div>\n        Loading...\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    userGlobal: state.user,\n  }\n}\n\nconst mapDispatchToProps = {\n  userKeepLogin,\n  checkStorage,\n  getCartData,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}